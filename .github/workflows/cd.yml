name: CD

on:
  push:
    branches:
      - "main"

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            target: "aarch64-apple-darwin"
            args: "--target aarch64-apple-darwin"
          - platform: "macos-13"
            target: "x86_64-apple-darwin"
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04"
            target: "x86_64-unknown-linux-gnu"
            args: ""
          - platform: "windows-latest"
            target: "x86_64-pc-windows-msvc"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20.11.0

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ (matrix.platform == 'macos-latest' || matrix.platform == 'macos-13') && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: build noname
        run: cd src-noname && cargo build --release

      - name: copy noname binary (non windows)
        if: matrix.platform != 'windows-latest'
        run: cp src-noname/target/release/noname src-tauri/bin/noname-${{ matrix.target }}

      - name: copy noname binary (windows only)
        if: matrix.platform == 'windows-latest'
        run: cp src-noname/target/release/noname.exe src-tauri/bin/noname-${{ matrix.target }}.exe

      - name: install frontend dependencies
        run: yarn install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: legends-of-dynasties-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: "Legends of Dynasties v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
